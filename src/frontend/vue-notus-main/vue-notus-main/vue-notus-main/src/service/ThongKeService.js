import api from './api'

// Transform d·ªØ li·ªáu s·∫£n ph·∫©m t·ª´ DTO (ƒë√£ c√≥ th√¥ng tin gi·∫£m gi√°)
const transformProduct = (product) => {
  console.log('üîç Transforming product from DTO:', product)
  
  // DTO ƒë√£ c√≥ ƒë·∫ßy ƒë·ªß th√¥ng tin, ch·ªâ c·∫ßn map l·∫°i
  const transformed = {
    id: product.id,
    title: product.title || 'Kh√¥ng c√≥ t√™n',
    author: product.author || 'Kh√¥ng c√≥ t√°c gi·∫£',
    price: parseFloat(product.price) || 0,
    originalPrice: parseFloat(product.originalPrice) || 0,
    image: product.image || 'https://via.placeholder.com/300x400?text=No+Image',
    category: product.category || 'S√°ch l·∫ª',
    publisher: product.publisher || 'NXB Tr·∫ª',
    language: product.language || 'Ti·∫øng Vi·ªát',
    format: product.format || 'B√¨a m·ªÅm',
    pages: parseInt(product.pages) || 300,
    soLuongTon: parseInt(product.stockQuantity) || 0,
    inStock: product.inStock || false,
    stockQuantity: parseInt(product.stockQuantity) || 0,
    // Th√™m c√°c thu·ªôc t√≠nh kh√°c n·∫øu c·∫ßn
    maChiTietSanPham: product.productCode,
    moTa: product.description || '',
    // Th√™m thu·ªôc t√≠nh ƒë·ªÉ ph√¢n bi·ªát s·∫£n ph·∫©m l·∫ª v√† b·ªô s√°ch
    isBookSet: product.isBookSet || false,
    // Th√¥ng tin gi·∫£m gi√°
    hasDiscount: product.hasDiscount || false,
    discountAmount: parseFloat(product.discountAmount) || 0,
    discountPercentage: product.discountPercentage ? parseFloat(product.discountPercentage) : 0
  }
  
  console.log('üîç Transformed result:', transformed)
  return transformed
}

// Transform d·ªØ li·ªáu b·ªô s√°ch t·ª´ DTO (ƒë√£ c√≥ th√¥ng tin gi·∫£m gi√°)
const transformBookSet = (bookSet) => {
  console.log('üîç Transforming book set from DTO:', bookSet)
  
  // DTO ƒë√£ c√≥ ƒë·∫ßy ƒë·ªß th√¥ng tin, ch·ªâ c·∫ßn map l·∫°i
  const transformed = {
    id: bookSet.id,
    title: bookSet.title || 'Kh√¥ng c√≥ t√™n',
    author: bookSet.author || 'Nhi·ªÅu t√°c gi·∫£',
    price: parseFloat(bookSet.price) || 0,
    originalPrice: parseFloat(bookSet.originalPrice) || 0,
    image: bookSet.image || 'https://via.placeholder.com/300x400?text=No+Image',
    category: bookSet.category || 'B·ªô s√°ch',
    publisher: bookSet.publisher || 'Nhi·ªÅu NXB',
    language: bookSet.language || 'Ti·∫øng Vi·ªát',
    format: bookSet.format || 'B·ªô s√°ch',
    pages: bookSet.pages || 'Nhi·ªÅu t·∫≠p',
    soLuongTon: parseInt(bookSet.stockQuantity) || 0,
    inStock: bookSet.inStock || false,
    stockQuantity: parseInt(bookSet.stockQuantity) || 0,
    // Th√™m c√°c thu·ªôc t√≠nh kh√°c n·∫øu c·∫ßn
    maBoSach: bookSet.productCode,
    moTa: bookSet.description || '',
    // Th√™m thu·ªôc t√≠nh ƒë·ªÉ ph√¢n bi·ªát s·∫£n ph·∫©m l·∫ª v√† b·ªô s√°ch
    isBookSet: bookSet.isBookSet || true,
    // Th√¥ng tin gi·∫£m gi√°
    hasDiscount: bookSet.hasDiscount || false,
    discountAmount: parseFloat(bookSet.discountAmount) || 0,
    discountPercentage: bookSet.discountPercentage ? parseFloat(bookSet.discountPercentage) : 0
  }
  
  console.log('üîç Transformed book set result:', transformed)
  return transformed
}

export default {
  // L·∫•y s√°ch m·ªõi nh·∫•t
  async getSachMoiNhat(limit = 5) {
    try {
      const response = await api.get('/thong-ke/sach-moi-nhat', {
        params: { limit }
      })
      console.log('üîç Raw data from API:', response.data)
      const transformed = response.data.map(transformProduct)
      console.log('üîç Transformed data:', transformed)
      return transformed
    } catch (error) {
      console.error('L·ªói khi l·∫•y s√°ch m·ªõi nh·∫•t:', error)
      throw error
    }
  },

  // L·∫•y b·ªô s√°ch m·ªõi nh·∫•t
  async getBoSachMoiNhat(limit = 5) {
    try {
      const response = await api.get('/thong-ke/bo-sach-moi-nhat', {
        params: { limit }
      })
      console.log('üîç Raw book set data from API:', response.data)
      const transformed = response.data.map(transformBookSet)
      console.log('üîç Transformed book set data:', transformed)
      return transformed
    } catch (error) {
      console.error('L·ªói khi l·∫•y b·ªô s√°ch m·ªõi nh·∫•t:', error)
      throw error
    }
  },

  // L·∫•y s√°ch b√°n ch·∫°y nh·∫•t
  async getSachBanChay(limit = 5) {
    try {
      const response = await api.get('/thong-ke/sach-ban-chay', {
        params: { limit }
      })
      console.log('üîç Raw bestseller data from API:', response.data)
      const transformed = response.data.map(transformProduct)
      console.log('üîç Transformed bestseller data:', transformed)
      return transformed
    } catch (error) {
      console.error('L·ªói khi l·∫•y s√°ch b√°n ch·∫°y:', error)
      throw error
    }
  },

  // L·∫•y b·ªô s√°ch b√°n ch·∫°y nh·∫•t
  async getBoSachBanChay(limit = 5) {
    try {
      const response = await api.get('/thong-ke/bo-sach-ban-chay', {
        params: { limit }
      })
      console.log('üîç Raw book set bestseller data from API:', response.data)
      const transformed = response.data.map(transformBookSet)
      console.log('üîç Transformed book set bestseller data:', transformed)
      return transformed
    } catch (error) {
      console.error('L·ªói khi l·∫•y b·ªô s√°ch b√°n ch·∫°y:', error)
      throw error
    }
  }
}
